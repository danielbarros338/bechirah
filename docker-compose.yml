version: '3.8'

services:
  # Serviço principal da aplicação Nuxt.js
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: bechirah-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3000
      - WEBHOOK_BASE_URL=${WEBHOOK_BASE_URL:-http://localhost:5678/webhook}
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - bechirah-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Serviço para desenvolvimento (opcional)
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: deps
    container_name: bechirah-app-dev
    ports:
      - "3001:3000"
      - "24678:24678" # Port para hot reload
    environment:
      - NODE_ENV=development
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3000
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.nuxt
    command: npm run dev
    networks:
      - bechirah-network
    profiles:
      - dev

  # Nginx como proxy reverso (opcional para produção)
  nginx:
    image: nginx:alpine
    container_name: bechirah-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      app:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - bechirah-network
    profiles:
      - nginx

  # Database (exemplo com PostgreSQL - opcional)
  db:
    image: postgres:15-alpine
    container_name: bechirah-db
    environment:
      POSTGRES_DB: bechirah
      POSTGRES_USER: bechirah_user
      POSTGRES_PASSWORD: bechirah_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - bechirah-network
    profiles:
      - db

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: bechirah-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - bechirah-network
    profiles:
      - cache

networks:
  bechirah-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: